services:
  jp-kana-flashcard-app-db:
    image: postgres:latest
    ports:
      - "7777:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kana-app-network

  jp-kana-flashcard-app-build:
    build:
      context: .
      dockerfile: Dockerfile
    image: sakanbeer88/jp-kana-flashcard-app:latest
    user: "1001:1001"  # Run as non-root user (nextjs:nodejs)
    depends_on:
      jp-kana-flashcard-app-db:
        condition: service_healthy
    env_file:
      - ./.env.docker
    ports:
      - "3000:3000"
    profiles:
      - build
    networks:
      - kana-app-network
    # Run migrations and start the app
    command: >
      sh -c "
      echo 'Waiting for database to be ready...' &&
      npx prisma migrate deploy &&
      npx prisma db seed &&
      npm start
      "
    restart: unless-stopped

  jp-kana-flashcard-app:
    image: sakanbeer88/jp-kana-flashcard-app:latest
    user: "1001:1001"  # Run as non-root user (nextjs:nodejs)
    depends_on:
      jp-kana-flashcard-app-db:
        condition: service_healthy
    env_file:
      - ./.env.docker
    ports:
      - "3000:3000"
    profiles:
      - pull
    networks:
      - kana-app-network
    # Run migrations and start the app
    command: >
      sh -c "
      echo 'Waiting for database to be ready...' &&
      npx prisma migrate deploy &&
      npx prisma db seed &&
      npm start
      "
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  kana-app-network:
    driver: bridge